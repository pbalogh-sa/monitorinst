---
- hosts: '{{ server }}'
  gather_facts: yes
  remote_user: root
  become_user: admin
  vars_files:
    - 'env.yml'
  vars:
    corpPath: '{{ lookup( "pipe", "pwd" ) | regex_replace( "^(.*)/ansible/.*", "\1/hu/linuxsysadmin" ) }}'
    nodeColoc: '{{ group_names[0] }}'
  tasks:
    - debug: var=ansible_nodename
    - debug: var=nodeColoc
    - debug: var=actinguser
    - debug: var=corpPath

# ROLEBASED 
#    - apt: update_cache=yes
    - apt: name='{{ item }}' state=present
      with_items:
        - python-cairo
        - python-django
        - python-django-tagging
        - python-twisted
        - python-zope.interface
        - fontconfig
        - libapache2-mod-wsgi
        - memcached
        - python-memcache
        - python-pysqlite2
        - python-dev
        - apache2
        - python-pip
    - pip: name='{{ item }}'
      with_items:
        - whisper
        - pytz

    - stat: path=/home/{{ actinguser }}/graphite
      register: graphiteExist

    - pip: name='{{ item }}'
      with_items:
        - carbon
        - graphite-web
      when: graphiteExist.stat.exists == False

    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }} state=directory
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/sites-available state=directory

    - command: creates=/home/{{ actinguser }}/graphite mv /opt/graphite /home/{{ actinguser }}/
    - file: path=/home/{{ actinguser }}/graphite state=directory recurse=yes owner={{ actinguser }} group={{ actinguser }}

    - command: creates=/home/{{ actinguser }}/graphite/conf/{{ item }} cp /home/{{ actinguser }}/graphite/conf/{{ item }}.example /home/{{ actinguser }}/graphite/conf/{{ item }}
      with_items:
        - carbon.conf
        - storage-schemas.conf
        - graphite.wsgi
      become: yes

    - command: creates=/home/{{ actinguser }}/graphite/webapp/graphite/local_settings.py cp /home/{{ actinguser }}/graphite/webapp/graphite/local_settings.py.example /home/{{ actinguser }}/graphite/webapp/graphite/local_settings.py
      become: yes

    - stat: path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/conf
      register: confExist
    - stat: path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/webapp/gaphite
      register: webappExist

    - synchronize: src=/home/{{ actinguser }}/graphite/conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/ mode=pull rsync_opts="--exclude=*.example"
      when: confExist.stat.exists == False

    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/webapp/graphite state=directory
    - synchronize: src=/home/{{ actinguser }}/graphite/webapp/graphite/{{ item }} dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/webapp/graphite/{{ item }} mode=pull rsync_opts="--exclude=*.example"
      with_items:
        - local_settings.py
        - app_settings.py
      when: webappExist.stat.exists == False

    - command: bash -c "find /home/{{ actinguser }}/graphite/conf -type f ! -name \*.example | xargs sed -i 's,/opt/graphite,/home/{{ actinguser }}/graphite,'"
      become: yes

    - command: bash -c "find /home/{{ actinguser }}/graphite/webapp/graphite -type f ! -name \*_settings.py | xargs sed -i 's,/opt/graphite,/home/{{ actinguser }}/graphite,'"
      become: yes

    - lineinfile: dest=/home/{{ actinguser }}/graphite/conf/carbon.conf regexp='USER =' line='USER = {{ actinguser }}'
      become: yes

    - lineinfile: dest=/etc/apache2/ports.conf insertafter='^Listen ' line='Listen {{ portbase }}80'
    - lineinfile: dest=/home/{{ actinguser }}/graphite/webapp/graphite/local_settings.py regexp='^TIME_ZONE = ' line='TIME_ZONE = \'Europe/Budapest\''
      become: yes
    - lineinfile: dest=/home/{{ actinguser }}/graphite/webapp/graphite/local_settings.py regexp='^SECRET_KEY = ' line='SECRET_KEY = \'secretkey\''
      become: yes

    - file: path=/home/{{ actinguser }}/graphite/run state=directory
      become: yes

    - file: path=/home/{{ actinguser }}/graphite/storage state=directory recurse=yes group='www-data'
    - file: path=/home/{{ actinguser }}/graphite/storage state=directory recurse=yes mode="g+rw"

    - template: src=graphite.conf.template dest=/etc/apache2/sites-available/graphite.conf

    - synchronize: src=/etc/apache2/sites-available/graphite.conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/sites-available/graphite.conf mode=pull

    - file: src=/usr/lib/python2.7/dist-packages/django/contrib/admin/static dest=/home/{{ actinguser }}/graphite/static state=link
      become: yes
    - lineinfile: dest=/home/{{ actinguser }}/graphite/webapp/graphite/app_settings.py regexp='^ADMIN_MEDIA_PREFIX = ' state=absent
      become: yes
    - lineinfile: dest=/home/{{ actinguser }}/graphite/webapp/graphite/app_settings.py regexp='^STATIC_ROOT = ' line='STATIC_ROOT = \'/home/{{ actinguser }}/graphite/static/\''
      become: yes
    - lineinfile: dest=/home/{{ actinguser }}/graphite/webapp/graphite/app_settings.py regexp='^STATIC_URL = ' line='STATIC_URL = \'/static/\''
      become: yes

    - replace: dest=/home/{{ actinguser }}/graphite/conf/carbon.conf regexp='PORT = 20' replace='PORT = {{ portbase }}'
      become: yes
    - replace: dest=/home/{{ actinguser }}/graphite/lib/carbon/conf.py regexp='PORT=20' replace='PORT={{ portbase }}'
      become: yes
    - replace: dest=/home/{{ actinguser }}/graphite/conf/carbon.conf regexp='PORT = 70' replace='PORT = {{ portbase }}'
      become: yes
    - replace: dest=/home/{{ actinguser }}/graphite/lib/carbon/conf.py regexp='PORT=70' replace='PORT={{ portbase }}'
      become: yes
    - command: chdir=/home/{{ actinguser }}/graphite/webapp/graphite python manage.py syncdb --noinput
      become: yes
    - file: path=/home/{{ actinguser }}/graphite/storage state=directory recurse=yes group='www-data' mode="g+rw"
    - shell: chdir=/home/{{ actinguser }}/graphite ./bin/carbon-cache.py start
      become: yes
      ignore_errors: yes
    - command: a2ensite graphite
    - service: name=apache2 state=restarted

    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }} cvs add graphite
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite find . -type d \! -name CVS -exec cvs add '{}' \;
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite find . \( -type d -name CVS -prune \) -o \( -type f -exec cvs add '{}' \; \)
      tags:
        - cvscommit
        - cvsadd

    - local_action: debug msg="{{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite"
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite cvs commit -m "Ansible shinken/mars
        Initial commit"
      tags:
        - cvscommit
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs add {{ item }}
      with_items:
        - ./etc
        - ./etc/apache2
        - ./etc/apache2/sites-available
        - ./etc/apache2/sites-available/graphite.conf
      tags:
        - cvscommit
        - cvsadd
      ignore_errors: yes

    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mas
        Initial commit" ./etc/apache2/sites-available/graphite.conf
      tags:
        - cvscommit

    - synchronize: src=/home/{{ actinguser }}/graphite/conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/ mode=pull rsync_opts="--exclude=*.example"
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/webapp/graphite state=directory
    - synchronize: src=/home/{{ actinguser }}/graphite/webapp/graphite/{{ item }} dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite/webapp/graphite/{{ item }} mode=pull rsync_opts="--exclude=*.example"
      with_items:
        - local_settings.py
        - app_settings.py
    - synchronize: src=/etc/apache2/sites-available/graphite.conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/sites-available/graphite.conf mode=pull

    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/graphite cvs commit -m "Ansible shinken/mars
        Second commit"
      tags:
        - cvscommit
        - overwrite
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Second commit" ./etc/apache2/sites-available/graphite.conf
      tags:
        - cvscommit
        - overwrite

# Shinken

    - apt: name='{{ item }}' state=present
      with_items:
        - python-pip
        - python-pycurl
        - python-cherrypy3
        - python-paramiko
    - user: name=shinken system=yes createhome=no
    - pip: name='{{ item }}'
      with_items:
        - bottle
        - shinken

    - file: path=/home/{{ actinguser }}/{{ item }} state=directory
      with_items:
        - shinken/etc
        - shinken/var/log
        - shinken/var/run
        - shinken/var/tmp
        - shinken/var/lib
        - shinken/usr/lib/nagios/plugins
      become: yes
    - file: src=/usr/bin dest=/home/{{ actinguser }}/shinken/usr/bin state=link
      become: yes

    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken/etc/shinken state=directory
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default state=directory

    - command: creates=/home/{{ actinguser }}/shinken/etc/shinken mv /etc/shinken /home/{{ actinguser }}/shinken/etc/
    - command: creates=/home/{{ actinguser }}/shinken/var/lib/shinken mv /var/lib/shinken /home/{{ actinguser }}/shinken/var/lib/
    - command: creates=/home/{{ actinguser }}/shinken/var/log/shinken mv /var/log/shinken /home/{{ actinguser }}/shinken/var/log/
    - command: creates=/home/{{ actinguser }}/shinken/var/run/shinken mv /var/run/shinken /home/{{ actinguser }}/shinken/var/run/
    - file: path=/home/{{ actinguser }}/shinken state=directory recurse=yes owner={{ actinguser }} group={{ actinguser }}

    - template: src=shinken.ini.template dest=/home/{{ actinguser }}/.shinken.ini
      become: yes
    - synchronize: src=/home/{{ actinguser }}/.shinken.ini dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/.shinken.ini mode=pull

    - command: shinken --init
      become: yes
    - command: shinken install {{ item }}
      with_items:
        - ui-graphite
        - graphite
        - linux-ssh
        - auth-cfg-password
        - webui2
        - sqlitedb
        - livestatus
        - logstore-sqlite
      become: yes

    - find: path=/home/{{ actinguser }}/shinken/etc/shinken patterns=*.ini recurse=yes 
      register: iniFiles
      become: yes

    - synchronize: src=/home/{{ actinguser }}/shinken/etc/shinken dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken/etc/ mode=pull

    - replace: dest='{{ item.path }}' regexp='=/var/' replace='=/home/{{ actinguser }}/shinken/var/'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='= /var/' replace='= /home/{{ actinguser }}/shinken/var/'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='=/usr/' replace='=/home/{{ actinguser }}/shinken/usr/'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='=/etc/shinken/' replace='=/home/{{ actinguser }}/shinken/etc/shinken/'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='=shinken' replace='={{ actinguser }}' backup=yes
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='port=77' replace='port={{ portbase }}'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - replace: dest='{{ item.path }}' regexp='# *port=' replace='port='
      with_items: '{{ iniFiles.files }}'
      become: yes

    - synchronize: src=/etc/default/shinken dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default/ mode=pull

    - replace: dest=/etc/default/shinken regexp='=/etc/' replace='=/home/{{ actinguser }}/shinken/etc/'
    - replace: dest=/etc/default/shinken regexp='=/usr/' replace='=/home/{{ actinguser }}/shinken/usr/'
    - replace: dest=/etc/default/shinken regexp='=/var/' replace='=/home/{{ actinguser }}/shinken/var/'
    - replace: dest=/etc/default/shinken regexp='=shinken' replace='={{ actinguser }}'

    - lineinfile: dest={{ item.path }} regexp='user=' line='user={{ actinguser }}'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - lineinfile: dest={{ item.path }} regexp='group=' line='group={{ actinguser }}'
      with_items: '{{ iniFiles.files }}'
      become: yes

    - find: path=/home/{{ actinguser }}/shinken/etc/shinken patterns=*.cfg recurse=yes
      register: cfgFiles
      become: yes

    - replace: dest={{ item.path }} regexp='port *77' replace='port {{ portbase }}'
      with_items: '{{ cfgFiles.files }}'
      become: yes

    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/resource.d/paths.cfg regexp='=/usr/lib/' replace='=/home/{{ actinguser }}/shinken/usr/lib/'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/resource.d/paths.cfg regexp='=/var/lib/' replace='=/home/{{ actinguser }}/shinken/var/lib/'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/shinken.cfg regexp='=/var/' replace='=/home/{{ actinguser }}/shinken/var/' backup=yes   
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/shinken.cfg regexp='=/etc/' replace='=/home/{{ actinguser }}/shinken/etc/' backup=yes
      become: yes
    - replace: dest={{ item.path }} regexp='=shinken' replace='={{ actinguser }}'
      with_items: '{{ cfgFiles.files }}'
      become: yes

    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/brokers/broker-master.cfg regexp='^([ \t]*modules[ \t]*)$' replace='\1 webui2,graphite,livestatus'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/hosts/localhost.cfg regexp='^([ \t]*use[ \t]+)(generic-host)$' replace='\1linux-ssh,\2'
      become: yes
    - template: src=webui2.conf.template dest=/home/{{ actinguser }}/shinken/etc/shinken/modules/webui2.cfg
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/modules/graphite.cfg regexp='port *20' replace='port {{ portbase }}'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/modules/livestatus.cfg regexp='port *50000' replace='port {{ portbase }}50'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/modules/ui-graphite.cfg regexp='uri *http://YOURSERVERNAME/' replace='uri http://localhost:{{ portbase }}80'
      become: yes
    - replace: dest=/home/{{ actinguser }}/shinken/etc/shinken/modules/ui-graphite.cfg regexp='templates_path[ \t]*/var/' replace='templates_path /home/{{ actinguser }}/shinken/var/'
      become: yes

    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }} cvs add shinken
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken find . -type d \! -name CVS -exec cvs add '{}' \;
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken find . \( -type d -name CVS -prune \) -o \( -type f -exec cvs add '{}' \; \)
      tags:
        - cvscommit
        - cvsadd
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken cvs commit -m "Ansible shinken/mars
        Initial commit"
      tags:
        - cvscommit
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs add {{ item }}
      with_items:
        - ./etc
        - ./etc/default/
        - ./etc/default/shinken
      tags:
        - cvscommit
        - cvsadd
      ignore_errors: yes
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Initial commit" ./etc/default/shinken
      tags:
        - cvscommit

    - synchronize: src=/etc/default/shinken dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default/ mode=pull
    - synchronize: src=/home/{{ actinguser }}/shinken/etc/shinken dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken/etc/ mode=pull

    - service: name=shinken state=started
      become: yes

    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/shinken cvs commit -m "Ansible shinken/mars
        Second commit"
      tags:
        - cvscommit
        - overwrite
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Second commit" ./etc/default/shinken
      tags:
        - cvscommit
        - overwrite

# Thruk

    - name: thruk install
      debug: msg="Thruk install"
    - get_url: url={{ item }} dest=/home/{{ actinguser }}/
      with_items:   
        - http://download.thruk.org/pkg/v2.06/ubuntu14.04/amd64/thruk_2.06_ubuntu14.04_amd64.deb
        - http://download.thruk.org/pkg/v2.06/ubuntu14.04/amd64/thruk-plugin-reporting_2.06_ubuntu14.04_amd64.deb
        - http://download.thruk.org/pkg/v2.06/ubuntu14.04/amd64/thruk-base_2.06_ubuntu14.04_amd64.deb
        - http://download.thruk.org/pkg/v2.06/ubuntu14.04/amd64/libthruk_2.06-1_ubuntu14.04_amd64.deb      
      become: yes

    - apt: deb=/home/{{ actinguser }}/libthruk_2.06-1_ubuntu14.04_amd64.deb
    - command: apt-get install -y -f
    - apt: deb=/home/{{ actinguser }}/thruk-base_2.06_ubuntu14.04_amd64.deb
    - command: apt-get install -y -f
    - apt: deb=/home/{{ actinguser }}/thruk_2.06_ubuntu14.04_amd64.deb
    - command: apt-get install -y -f
    - apt: deb=/home/{{ actinguser }}/thruk-plugin-reporting_2.06_ubuntu14.04_amd64.deb
    - command: apt-get install -y -f

    - file: path=/home/{{ actinguser }}/{{ item }} state=directory
      with_items:
        - thruk/etc
        - thruk/var/lib
      become: yes

    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk/etc/thruk state=directory
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/thruk state=directory
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/conf-available state=directory    
    
    - command: creates=/home/{{ actinguser }}/thruk/etc/thruk mv /etc/thruk /home/{{ actinguser }}/thruk/etc/

    - file: path=/etc/thruk state=directory
    - command: creates=/etc/thruk/thruk.conf mv /home/{{ actinguser }}/thruk/etc/thruk/thruk.conf /etc/thruk/thruk.conf
    - command: creates=/etc/thruk/thruk_local.conf mv /home/{{ actinguser }}/thruk/etc/thruk/thruk_local.conf /etc/thruk/thruk_local.conf
    - command: creates=/home/{{ actinguser }}/thruk/var/lib/thruk mv /var/lib/thruk /home/{{ actinguser }}/thruk/var/lib/
    - file: path=/home/{{ actinguser }}/thruk state=directory recurse=yes owner={{ actinguser }} group={{ actinguser }}
    - file: path=/home/{{ actinguser }}/thruk/var/lib/thruk state=directory recurse=yes group='www-data' mode="g+rw"
 
    - synchronize: src=/etc/thruk/{{ item }} dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/thruk/{{ item }} mode=pull
      with_items:
        - thruk_local.conf
        - thruk.conf

    - template: src=thruk_local.conf.template dest=/etc/thruk/thruk_local.conf

    - synchronize: src=/home/{{ actinguser }}/thruk/etc/thruk dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk/etc/ mode=pull
    - synchronize: src=/etc/apache2/conf-available/thruk.conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/conf-available/thruk.conf mode=pull
    - replace: dest=/etc/apache2/conf-available/thruk.conf regexp='[ \t]+/etc/thruk' replace=' /home/{{ actinguser }}/thruk/etc/thruk'

    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }} cvs add thruk
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk find . -type d \! -name CVS -exec cvs add '{}' \;
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk find . \( -type d -name CVS -prune \) -o \( -type f -exec cvs add '{}' \; \)
      tags:
        - cvscommit
        - cvsadd
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk cvs commit -m "Ansible shinken/mars
        Initial commit"
      tags:
        - cvscommit
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs add {{ item }}
      with_items:
        - ./etc/thruk
        - ./etc/apache2/conf-available
        - ./etc/apache2/conf-available/thruk.conf
        - ./etc/thruk/thruk.conf
        - ./etc/thruk/thruk_local.conf
      tags:
        - cvscommit
        - cvsadd
      ignore_errors: yes
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Initial commit" {{ item }}
      with_items:
        - ./etc/apache2/conf-available/thruk.conf
        - ./etc/thruk/thruk.conf
        - ./etc/thruk/thruk_local.conf
      tags:
        - cvscommit

    - synchronize: src=/etc/thruk/{{ item }} dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/thruk/{{ item }} mode=pull
      with_items:
        - thruk_local.conf
        - thruk.conf
    - synchronize: src=/etc/apache2/conf-available/thruk.conf dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/apache2/conf-available/thruk.conf mode=pull
    - service: name=apache2 state=restarted
    - service: name=thruk state=restarted

    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/thruk cvs commit -m "Ansible shinken/mars
        Second commit"
      tags:
        - cvscommit
        - overwrite
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        second commit" {{ item }}
      with_items:
        - ./etc/apache2/conf-available/thruk.conf
        - ./etc/thruk/thruk.conf
        - ./etc/thruk/thruk_local.conf
      tags:
        - cvscommit
        - overwrite

# Grafana

    - get_url: url=https://grafanarel.s3.amazonaws.com/builds/grafana_2.6.0_amd64.deb dest=/home/{{ actinguser }}/grafana_2.6.0_amd64.deb
      become: yes
    - apt: deb=/home/{{ actinguser }}/grafana_2.6.0_amd64.deb
    - file: path=/home/{{ actinguser }}/{{ item }} state=directory
      with_items:
        - grafana/var
        - grafana/var/lib
        - grafana/var/log
        - grafana/share
      become: yes
    - command: creates=/home/{{ actinguser }}/grafana/share/conf mv /usr/share/grafana/conf /home/{{ actinguser }}/grafana/share/
    - command: creates=/home/{{ actinguser }}/grafana/share/public mv /usr/share/grafana/public /home/{{ actinguser }}/grafana/share/
    - command: creates=/home/{{ actinguser }}/grafana/share/vendor mv /usr/share/grafana/vendor /home/{{ actinguser }}/grafana/share/
    - command: creates=/home/{{ actinguser }}/grafana/etc mv /etc/grafana /home/{{ actinguser }}/grafana/etc
    - file: path=/home/{{ actinguser }}/grafana state=directory recurse=yes owner={{ actinguser }} group={{ actinguser }}

    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana/etc state=directory
    - local_action: file path={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default state=directory
    
    - synchronize: src=/etc/default/grafana-server dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default/grafana-server mode=pull
    - synchronize: src=/home/{{ actinguser }}/grafana/etc/grafana.ini dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana/etc/grafana.ini mode=pull

    - template: src=grafana-server.template dest=/etc/default/grafana-server
    - lineinfile: dest=/home/{{ actinguser }}/grafana/etc/grafana.ini regexp='^;http_port = ' line='http_port = {{ portbase }}00'

    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }} cvs add grafana
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana find . -type d \! -name CVS -exec cvs add '{}' \;
      tags:
        - cvscommit
        - cvsadd
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana find . \( -type d -name CVS -prune \) -o \( -type f -exec cvs add '{}' \; \)
      tags:
        - cvscommit
        - cvsadd
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana cvs commit -m "Ansible shinken/mars
        Initial commit"
      tags:
        - cvscommit
    - local_action: shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs add ./etc/default/grafana-server
      tags:
        - cvscommit
        - cvsadd
      ignore_errors: yes
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Initial commit" ./etc/default/grafana-server
      tags:
        - cvscommit

    - synchronize: src=/etc/default/grafana-server dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/etc/default/grafana-server mode=pull
    - synchronize: src=/home/{{ actinguser }}/grafana/etc/grafana.ini dest={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana/etc/grafana.ini mode=pull

    - service: name=grafana-server state=restarted

    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }}/home/{{ actinguser }}/grafana cvs commit -m "Ansible shinken/mars
        Second commit"
      tags:
        - cvscommit
        - overwrite
    - local_action: |
        shell chdir={{ corpPath }}/{{ nodeColoc }}/{{ ansible_nodename }} cvs commit -m "Ansible shinken/mars
        Second commit" ./etc/default/grafana-server
      tags:
        - cvscommit
        - overwrite

